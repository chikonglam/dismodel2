/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SourceViewBase2.java
 *
 * Created on Dec 10, 2010, 1:32:17 PM
 */

package gov.usgs.dismodel.calc.greens.dialogs;

/**
 *
 * @author clam-PR
 */
public class SourceViewBase extends javax.swing.JDialog {

    /** Creates new form SourceViewBase2 */
    public SourceViewBase(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    protected void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane1 = new javax.swing.JScrollPane();
        sourceTable = new javax.swing.JTable();
        buttonEdit = new javax.swing.JButton();
        buttonOK = new javax.swing.JButton();
        buttonDelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        sourceTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Enabled", "Model"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        sourceTable.setColumnSelectionAllowed(true);
        sourceTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(sourceTable);
        sourceTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        sourceTable.getColumnModel().getColumn(0).setMinWidth(60);
        sourceTable.getColumnModel().getColumn(0).setPreferredWidth(60);
        sourceTable.getColumnModel().getColumn(0).setMaxWidth(60);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jScrollPane1, gridBagConstraints);

        buttonEdit.setText("Edit");
        buttonEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEditActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        getContentPane().add(buttonEdit, gridBagConstraints);

        buttonOK.setText("OK");
        buttonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonOKActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        getContentPane().add(buttonOK, gridBagConstraints);

        buttonDelete.setText("Delete");
        buttonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        getContentPane().add(buttonDelete, gridBagConstraints);

        pack();
    }// </editor-fold>

    protected void buttonEditActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
}                                          

    protected void buttonOKActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
}                                        

    protected void buttonDeleteActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
}                                            

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SourceViewBase dialog = new SourceViewBase(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    protected javax.swing.JButton buttonDelete;
    protected javax.swing.JButton buttonEdit;
    protected javax.swing.JButton buttonOK;
    protected javax.swing.JScrollPane jScrollPane1;
    protected javax.swing.JTable sourceTable;
    // End of variables declaration

    /**
     * @return the buttonDelete
     */
    public javax.swing.JButton getButtonDelete() {
        return buttonDelete;
    }

    /**
     * @param buttonDelete the buttonDelete to set
     */
    public void setButtonDelete(javax.swing.JButton buttonDelete) {
        this.buttonDelete = buttonDelete;
    }

    /**
     * @return the buttonEdit
     */
    public javax.swing.JButton getButtonEdit() {
        return buttonEdit;
    }

    /**
     * @param buttonEdit the buttonEdit to set
     */
    public void setButtonEdit(javax.swing.JButton buttonEdit) {
        this.buttonEdit = buttonEdit;
    }

    /**
     * @return the buttonOK
     */
    public javax.swing.JButton getButtonOK() {
        return buttonOK;
    }

    /**
     * @param buttonOK the buttonOK to set
     */
    public void setButtonOK(javax.swing.JButton buttonOK) {
        this.buttonOK = buttonOK;
    }

    /**
     * @return the jScrollPane1
     */
    public javax.swing.JScrollPane getjScrollPane1() {
        return jScrollPane1;
    }

    /**
     * @param jScrollPane1 the jScrollPane1 to set
     */
    public void setjScrollPane1(javax.swing.JScrollPane jScrollPane1) {
        this.jScrollPane1 = jScrollPane1;
    }

    /**
     * @return the sourceTable
     */
    public javax.swing.JTable getSourceTable() {
        return sourceTable;
    }

    /**
     * @param sourceTable the sourceTable to set
     */
    public void setSourceTable(javax.swing.JTable sourceTable) {
        this.sourceTable = sourceTable;
    }

}
