/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DistSlipConstDialogBase.java
 *
 * Created on Mar 29, 2011, 4:55:30 PM
 */

package gov.usgs.dismodel.calc.inversion.dialogs;

import javax.swing.JWindow;

/**
 *
 * @author chi
 */
public class DistSlipConstDialogBase extends javax.swing.JFrame {

    /** Creates new form DistSlipConstDialogBase */
    public DistSlipConstDialogBase() {
        initComponents();
    }

	/** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    protected void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        mmtConstGp = new javax.swing.ButtonGroup();
        nonNeg = new javax.swing.JCheckBox();
        conMmt = new javax.swing.JCheckBox();
        le = new javax.swing.JRadioButton();
        eq = new javax.swing.JRadioButton();
        ge = new javax.swing.JRadioButton();
        moment = new javax.swing.JTextField();
        OKbtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        nonNeg.setText("Constraint slips to be non-negative");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
        getContentPane().add(nonNeg, gridBagConstraints);

        conMmt.setText("Constraint moment");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 0, 0);
        getContentPane().add(conMmt, gridBagConstraints);

        mmtConstGp.add(le);
        le.setSelected(true);
        le.setText("Less than or equals to ( <= )");

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, conMmt, org.jdesktop.beansbinding.ELProperty.create("${selected}"), le, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 28, 0, 0);
        getContentPane().add(le, gridBagConstraints);

        mmtConstGp.add(eq);
        eq.setText("Equals to ( == )");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, conMmt, org.jdesktop.beansbinding.ELProperty.create("${selected}"), eq, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 28, 0, 0);
        getContentPane().add(eq, gridBagConstraints);

        mmtConstGp.add(ge);
        ge.setText("Greater than or equals to ( >= )");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, conMmt, org.jdesktop.beansbinding.ELProperty.create("${selected}"), ge, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 28, 0, 0);
        getContentPane().add(ge, gridBagConstraints);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, conMmt, org.jdesktop.beansbinding.ELProperty.create("${selected}"), moment, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.ipadx = 213;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 48, 0, 0);
        getContentPane().add(moment, gridBagConstraints);

        OKbtn.setText("OK");
        OKbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 2, 2);
        getContentPane().add(OKbtn, gridBagConstraints);

        bindingGroup.bind();

        pack();
    }// </editor-fold>

    protected void OKbtnActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DistSlipConstDialogBase().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    protected javax.swing.JButton OKbtn;
    protected javax.swing.JCheckBox conMmt;
    protected javax.swing.JRadioButton eq;
    protected javax.swing.JRadioButton ge;
    protected javax.swing.JRadioButton le;
    private javax.swing.ButtonGroup mmtConstGp;
    protected javax.swing.JTextField moment;
    protected javax.swing.JCheckBox nonNeg;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration

}
