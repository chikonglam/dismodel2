package gov.usgs.dismodel;

import gov.usgs.dismodel.calc.greens.DisplacementSolver;
import gov.usgs.dismodel.calc.inversion.Chi2Monitor;
import gov.usgs.dismodel.calc.inversion.InversionProgressStats;
import gov.usgs.dismodel.calc.inversion.InversionResults;

import javax.swing.SwingUtilities;
import javax.swing.SwingWorker;

/**
 *
 * @author dmcmanamon
 */
public class InversionProgress extends javax.swing.JDialog implements InversionListener {
    private static final long serialVersionUID = 1L;
    private SwingWorker<InversionResults, InversionProgressStats> solverWorker;
    private float curMaxChi2 = 200;
    private boolean monitorStarted = false;
    
        /** Creates new form InversionProgress */
    public InversionProgress(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        paramsText = new javax.swing.JTextArea();
        cancelButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        runText = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        chi2Text = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        chi2Monitor1 = new Chi2Monitor();
        chi2Monitor1.setMaxChi2(curMaxChi2);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Inverting sources");

        paramsText.setColumns(20);
        paramsText.setEditable(false);
        paramsText.setRows(5);
        paramsText.setAutoscrolls(false);
        jScrollPane1.setViewportView(paramsText);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Run:");

        runText.setEditable(false);
        runText.setFocusable(false);

        jLabel3.setText("Chi^2:");

        chi2Text.setEditable(false);
        chi2Text.setFocusable(false);
        chi2Text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chi2TextActionPerformed(evt);
            }
        });

        jLabel4.setText("Detail modeled parameters");

        chi2Monitor1.setMaximumSize(new java.awt.Dimension(300, 300));
        chi2Monitor1.setMinimumSize(new java.awt.Dimension(300, 300));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(chi2Monitor1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(14, 14, 14)
                                .addComponent(runText, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(chi2Text, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 306, Short.MAX_VALUE)
                                .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chi2Monitor1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(runText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(chi2Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cancelButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {                                             
        if (solverWorker != null){
            solverWorker.cancel(true);
            dispose();
        }
    }                                            

    private void chi2TextActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                InversionProgress dialog = new InversionProgress(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.chi2Monitor1.setCurChi2(50000000);
                dialog.chi2Monitor1.setMaxChi2(200000000);
                dialog.chi2Monitor1.surf.start();
                dialog.setVisible(true);
            }
        });



    }

    // Variables declaration - do not modify
    private javax.swing.JButton cancelButton;
    private Chi2Monitor chi2Monitor1;
    private javax.swing.JTextField chi2Text;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTextArea paramsText;
    private javax.swing.JTextField runText;
    // End of variables declaration
   
    @Override
    public void update(final InversionProgressStats results) {
        Runnable doProgressUpdate = new Runnable() {
            @Override
            public void run() {
                double curChi2 = results.getChi2();
                chi2Text.setText(  String.valueOf( curChi2 )  );
                runText.setText( String.valueOf( results.getRun()+1 ) );
                String paramsStr = "";
                DisplacementSolver[] curParams = results.getCurParams();
                for (DisplacementSolver curModel : curParams) {
                    paramsStr += curModel.toString() + "\n"; 
                }
                //updateCurChi2Max(curChi2);
                chi2Monitor1.setCurChi2((float) curChi2);
                startMonitorIfNotAlready();
                paramsText.setText(paramsStr);

            }
        };
        SwingUtilities.invokeLater(doProgressUpdate);
    }

	public SwingWorker<InversionResults, InversionProgressStats> getSolverWorker() {
		return solverWorker;
	}

	public void setSolverWorker(SwingWorker<InversionResults, InversionProgressStats> solverWorker) {
		this.solverWorker = solverWorker;
	}
	
	public void updateCurChi2Max(double curChi2){
	    if (curChi2 > curMaxChi2) {
	        curMaxChi2 = (float) curChi2;
	        chi2Monitor1.setMaxChi2(curMaxChi2);
	    }
	}
	
	private void startMonitorIfNotAlready(){
	    if (monitorStarted) return;
	    chi2Monitor1.surf.start();
	    monitorStarted = true;
	}
    
    

    
}
